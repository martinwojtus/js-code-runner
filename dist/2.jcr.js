(window.webpackJsonpJsCodeRunner=window.webpackJsonpJsCodeRunner||[]).push([[2],{"./node_modules/babel-preset-vue/dist/babel-preset-vue.js":
/*!****************************************************************!*\
  !*** ./node_modules/babel-preset-vue/dist/babel-preset-vue.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("(function (global, factory) {\n\t true ? module.exports = factory() :\n\tundefined;\n}(this, (function () { 'use strict';\n\n\tfunction unwrapExports (x) {\n\t\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n\t}\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar ast = createCommonjsModule(function (module) {\n\t/*\n\t  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function () {\n\n\t    function isExpression(node) {\n\t        if (node == null) { return false; }\n\t        switch (node.type) {\n\t            case 'ArrayExpression':\n\t            case 'AssignmentExpression':\n\t            case 'BinaryExpression':\n\t            case 'CallExpression':\n\t            case 'ConditionalExpression':\n\t            case 'FunctionExpression':\n\t            case 'Identifier':\n\t            case 'Literal':\n\t            case 'LogicalExpression':\n\t            case 'MemberExpression':\n\t            case 'NewExpression':\n\t            case 'ObjectExpression':\n\t            case 'SequenceExpression':\n\t            case 'ThisExpression':\n\t            case 'UnaryExpression':\n\t            case 'UpdateExpression':\n\t                return true;\n\t        }\n\t        return false;\n\t    }\n\n\t    function isIterationStatement(node) {\n\t        if (node == null) { return false; }\n\t        switch (node.type) {\n\t            case 'DoWhileStatement':\n\t            case 'ForInStatement':\n\t            case 'ForStatement':\n\t            case 'WhileStatement':\n\t                return true;\n\t        }\n\t        return false;\n\t    }\n\n\t    function isStatement(node) {\n\t        if (node == null) { return false; }\n\t        switch (node.type) {\n\t            case 'BlockStatement':\n\t            case 'BreakStatement':\n\t            case 'ContinueStatement':\n\t            case 'DebuggerStatement':\n\t            case 'DoWhileStatement':\n\t            case 'EmptyStatement':\n\t            case 'ExpressionStatement':\n\t            case 'ForInStatement':\n\t            case 'ForStatement':\n\t            case 'IfStatement':\n\t            case 'LabeledStatement':\n\t            case 'ReturnStatement':\n\t            case 'SwitchStatement':\n\t            case 'ThrowStatement':\n\t            case 'TryStatement':\n\t            case 'VariableDeclaration':\n\t            case 'WhileStatement':\n\t            case 'WithStatement':\n\t                return true;\n\t        }\n\t        return false;\n\t    }\n\n\t    function isSourceElement(node) {\n\t      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n\t    }\n\n\t    function trailingStatement(node) {\n\t        switch (node.type) {\n\t        case 'IfStatement':\n\t            if (node.alternate != null) {\n\t                return node.alternate;\n\t            }\n\t            return node.consequent;\n\n\t        case 'LabeledStatement':\n\t        case 'ForStatement':\n\t        case 'ForInStatement':\n\t        case 'WhileStatement':\n\t        case 'WithStatement':\n\t            return node.body;\n\t        }\n\t        return null;\n\t    }\n\n\t    function isProblematicIfStatement(node) {\n\t        var current;\n\n\t        if (node.type !== 'IfStatement') {\n\t            return false;\n\t        }\n\t        if (node.alternate == null) {\n\t            return false;\n\t        }\n\t        current = node.consequent;\n\t        do {\n\t            if (current.type === 'IfStatement') {\n\t                if (current.alternate == null)  {\n\t                    return true;\n\t                }\n\t            }\n\t            current = trailingStatement(current);\n\t        } while (current);\n\n\t        return false;\n\t    }\n\n\t    module.exports = {\n\t        isExpression: isExpression,\n\t        isStatement: isStatement,\n\t        isIterationStatement: isIterationStatement,\n\t        isSourceElement: isSourceElement,\n\t        isProblematicIfStatement: isProblematicIfStatement,\n\n\t        trailingStatement: trailingStatement\n\t    };\n\t}());\n\t/* vim: set sw=4 ts=4 et tw=80 : */\n\t});\n\tvar ast_1 = ast.isExpression;\n\tvar ast_2 = ast.isStatement;\n\tvar ast_3 = ast.isIterationStatement;\n\tvar ast_4 = ast.isSourceElement;\n\tvar ast_5 = ast.isProblematicIfStatement;\n\tvar ast_6 = ast.trailingStatement;\n\n\tvar code = createCommonjsModule(function (module) {\n\t/*\n\t  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n\t  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function () {\n\n\t    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n\t    // See `tools/generate-identifier-regex.js`.\n\t    ES5Regex = {\n\t        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierStart:\n\t        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n\t        // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierPart:\n\t        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n\t    };\n\n\t    ES6Regex = {\n\t        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:\n\t        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF98]|\\uD809[\\uDC00-\\uDC6E]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:\n\t        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDD0-\\uDDDA\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF01-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF98]|\\uD809[\\uDC00-\\uDC6E]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t    };\n\n\t    function isDecimalDigit(ch) {\n\t        return 0x30 <= ch && ch <= 0x39;  // 0..9\n\t    }\n\n\t    function isHexDigit(ch) {\n\t        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n\t            0x61 <= ch && ch <= 0x66 ||     // a..f\n\t            0x41 <= ch && ch <= 0x46;       // A..F\n\t    }\n\n\t    function isOctalDigit(ch) {\n\t        return ch >= 0x30 && ch <= 0x37;  // 0..7\n\t    }\n\n\t    // 7.2 White Space\n\n\t    NON_ASCII_WHITESPACES = [\n\t        0x1680, 0x180E,\n\t        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n\t        0x202F, 0x205F,\n\t        0x3000,\n\t        0xFEFF\n\t    ];\n\n\t    function isWhiteSpace(ch) {\n\t        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n\t            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n\t    }\n\n\t    // 7.3 Line Terminators\n\n\t    function isLineTerminator(ch) {\n\t        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n\t    }\n\n\t    // 7.6 Identifier Names and Identifiers\n\n\t    function fromCodePoint(cp) {\n\t        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n\t        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n\t        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n\t        return cu1 + cu2;\n\t    }\n\n\t    IDENTIFIER_START = new Array(0x80);\n\t    for(ch = 0; ch < 0x80; ++ch) {\n\t        IDENTIFIER_START[ch] =\n\t            ch >= 0x61 && ch <= 0x7A ||  // a..z\n\t            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n\t            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n\t    }\n\n\t    IDENTIFIER_PART = new Array(0x80);\n\t    for(ch = 0; ch < 0x80; ++ch) {\n\t        IDENTIFIER_PART[ch] =\n\t            ch >= 0x61 && ch <= 0x7A ||  // a..z\n\t            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n\t            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n\t            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n\t    }\n\n\t    function isIdentifierStartES5(ch) {\n\t        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n\t    }\n\n\t    function isIdentifierPartES5(ch) {\n\t        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n\t    }\n\n\t    function isIdentifierStartES6(ch) {\n\t        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n\t    }\n\n\t    function isIdentifierPartES6(ch) {\n\t        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n\t    }\n\n\t    module.exports = {\n\t        isDecimalDigit: isDecimalDigit,\n\t        isHexDigit: isHexDigit,\n\t        isOctalDigit: isOctalDigit,\n\t        isWhiteSpace: isWhiteSpace,\n\t        isLineTerminator: isLineTerminator,\n\t        isIdentifierStartES5: isIdentifierStartES5,\n\t        isIdentifierPartES5: isIdentifierPartES5,\n\t        isIdentifierStartES6: isIdentifierStartES6,\n\t        isIdentifierPartES6: isIdentifierPartES6\n\t    };\n\t}());\n\t/* vim: set sw=4 ts=4 et tw=80 : */\n\t});\n\tvar code_1 = code.isDecimalDigit;\n\tvar code_2 = code.isHexDigit;\n\tvar code_3 = code.isOctalDigit;\n\tvar code_4 = code.isWhiteSpace;\n\tvar code_5 = code.isLineTerminator;\n\tvar code_6 = code.isIdentifierStartES5;\n\tvar code_7 = code.isIdentifierPartES5;\n\tvar code_8 = code.isIdentifierStartES6;\n\tvar code_9 = code.isIdentifierPartES6;\n\n\tvar keyword = createCommonjsModule(function (module) {\n\t/*\n\t  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function () {\n\n\t    var code$$1 = code;\n\n\t    function isStrictModeReservedWordES6(id) {\n\t        switch (id) {\n\t        case 'implements':\n\t        case 'interface':\n\t        case 'package':\n\t        case 'private':\n\t        case 'protected':\n\t        case 'public':\n\t        case 'static':\n\t        case 'let':\n\t            return true;\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\n\t    function isKeywordES5(id, strict) {\n\t        // yield should not be treated as keyword under non-strict mode.\n\t        if (!strict && id === 'yield') {\n\t            return false;\n\t        }\n\t        return isKeywordES6(id, strict);\n\t    }\n\n\t    function isKeywordES6(id, strict) {\n\t        if (strict && isStrictModeReservedWordES6(id)) {\n\t            return true;\n\t        }\n\n\t        switch (id.length) {\n\t        case 2:\n\t            return (id === 'if') || (id === 'in') || (id === 'do');\n\t        case 3:\n\t            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n\t        case 4:\n\t            return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                (id === 'void') || (id === 'with') || (id === 'enum');\n\t        case 5:\n\t            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                (id === 'class') || (id === 'super');\n\t        case 6:\n\t            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                (id === 'switch') || (id === 'export') || (id === 'import');\n\t        case 7:\n\t            return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t        case 8:\n\t            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t        case 10:\n\t            return (id === 'instanceof');\n\t        default:\n\t            return false;\n\t        }\n\t    }\n\n\t    function isReservedWordES5(id, strict) {\n\t        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n\t    }\n\n\t    function isReservedWordES6(id, strict) {\n\t        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n\t    }\n\n\t    function isRestrictedWord(id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    }\n\n\t    function isIdentifierNameES5(id) {\n\t        var i, iz, ch;\n\n\t        if (id.length === 0) { return false; }\n\n\t        ch = id.charCodeAt(0);\n\t        if (!code$$1.isIdentifierStartES5(ch)) {\n\t            return false;\n\t        }\n\n\t        for (i = 1, iz = id.length; i < iz; ++i) {\n\t            ch = id.charCodeAt(i);\n\t            if (!code$$1.isIdentifierPartES5(ch)) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\n\t    function decodeUtf16(lead, trail) {\n\t        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n\t    }\n\n\t    function isIdentifierNameES6(id) {\n\t        var i, iz, ch, lowCh, check;\n\n\t        if (id.length === 0) { return false; }\n\n\t        check = code$$1.isIdentifierStartES6;\n\t        for (i = 0, iz = id.length; i < iz; ++i) {\n\t            ch = id.charCodeAt(i);\n\t            if (0xD800 <= ch && ch <= 0xDBFF) {\n\t                ++i;\n\t                if (i >= iz) { return false; }\n\t                lowCh = id.charCodeAt(i);\n\t                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n\t                    return false;\n\t                }\n\t                ch = decodeUtf16(ch, lowCh);\n\t            }\n\t            if (!check(ch)) {\n\t                return false;\n\t            }\n\t            check = code$$1.isIdentifierPartES6;\n\t        }\n\t        return true;\n\t    }\n\n\t    function isIdentifierES5(id, strict) {\n\t        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n\t    }\n\n\t    function isIdentifierES6(id, strict) {\n\t        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n\t    }\n\n\t    module.exports = {\n\t        isKeywordES5: isKeywordES5,\n\t        isKeywordES6: isKeywordES6,\n\t        isReservedWordES5: isReservedWordES5,\n\t        isReservedWordES6: isReservedWordES6,\n\t        isRestrictedWord: isRestrictedWord,\n\t        isIdentifierNameES5: isIdentifierNameES5,\n\t        isIdentifierNameES6: isIdentifierNameES6,\n\t        isIdentifierES5: isIdentifierES5,\n\t        isIdentifierES6: isIdentifierES6\n\t    };\n\t}());\n\t/* vim: set sw=4 ts=4 et tw=80 : */\n\t});\n\tvar keyword_1 = keyword.isKeywordES5;\n\tvar keyword_2 = keyword.isKeywordES6;\n\tvar keyword_3 = keyword.isReservedWordES5;\n\tvar keyword_4 = keyword.isReservedWordES6;\n\tvar keyword_5 = keyword.isRestrictedWord;\n\tvar keyword_6 = keyword.isIdentifierNameES5;\n\tvar keyword_7 = keyword.isIdentifierNameES6;\n\tvar keyword_8 = keyword.isIdentifierES5;\n\tvar keyword_9 = keyword.isIdentifierES6;\n\n\tvar utils = createCommonjsModule(function (module, exports) {\n\t/*\n\t  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\n\t(function () {\n\n\t    exports.ast = ast;\n\t    exports.code = code;\n\t    exports.keyword = keyword;\n\t}());\n\t/* vim: set sw=4 ts=4 et tw=80 : */\n\t});\n\tvar utils_1 = utils.ast;\n\tvar utils_2 = utils.code;\n\tvar utils_3 = utils.keyword;\n\n\tvar makeMap = function makeMap (str) {\n\t  var map = Object.create(null);\n\t  var list = str.split(',');\n\t  for (var i = 0; i < list.length; i++) {\n\t    map[list[i]] = true;\n\t  }\n\t  return val => map[val]\n\t};\n\n\tvar isTopLevel = makeMap('class,staticClass,style,key,ref,refInFor,slot,scopedSlots');\n\tvar isNestable = makeMap('domProps,on,nativeOn,hook');\n\tvar nestableRE = /^(domProps|on|nativeOn|hook)([\\-_A-Z])/;\n\tvar dirRE = /^v-/;\n\tvar xlinkRE = /^xlink([A-Z])/;\n\n\tvar groupProps = function groupProps (props, t) {\n\t  var newProps = [];\n\t  var currentNestedObjects = Object.create(null);\n\t  props.forEach(function (prop) {\n\t    var name = prop.key.value || prop.key.name;\n\t    if (isTopLevel(name)) {\n\t      // top-level special props\n\t      newProps.push(prop);\n\t    } else {\n\t      // nested modules\n\t      var nestMatch = name.match(nestableRE);\n\t      if (nestMatch) {\n\t        var prefix = nestMatch[1];\n\t        var suffix = name.replace(nestableRE, function (_, $1, $2) {\n\t          return $2 === '-' ? '' : $2.toLowerCase()\n\t        });\n\t        var nestedProp = t.objectProperty(t.stringLiteral(suffix), prop.value);\n\t        var nestedObject = currentNestedObjects[prefix];\n\t        if (!nestedObject) {\n\t          nestedObject = currentNestedObjects[prefix] = t.objectProperty(\n\t            t.identifier(prefix),\n\t            t.objectExpression([nestedProp])\n\t          );\n\t          newProps.push(nestedObject);\n\t        } else {\n\t          nestedObject.value.properties.push(nestedProp);\n\t        }\n\t      } else if (dirRE.test(name)) {\n\t        // custom directive\n\t        name = name.replace(dirRE, '');\n\t        var dirs = currentNestedObjects.directives;\n\t        if (!dirs) {\n\t          dirs = currentNestedObjects.directives = t.objectProperty(\n\t            t.identifier('directives'),\n\t            t.arrayExpression([])\n\t          );\n\t          newProps.push(dirs);\n\t        }\n\t        dirs.value.elements.push(t.objectExpression([\n\t          t.objectProperty(\n\t            t.identifier('name'),\n\t            t.stringLiteral(name)\n\t          ),\n\t          t.objectProperty(\n\t            t.identifier('value'),\n\t            prop.value\n\t          )\n\t        ]));\n\t      } else {\n\t        // rest are nested under attrs\n\t        var attrs = currentNestedObjects.attrs;\n\t        // guard xlink attributes\n\t        if (xlinkRE.test(prop.key.name)) {\n\t          prop.key.name = JSON.stringify(prop.key.name.replace(xlinkRE, function (m, p1) {\n\t            return 'xlink:' + p1.toLowerCase()\n\t          }));\n\t        }\n\t        if (!attrs) {\n\t          attrs = currentNestedObjects.attrs = t.objectProperty(\n\t            t.identifier('attrs'),\n\t            t.objectExpression([prop])\n\t          );\n\t          newProps.push(attrs);\n\t        } else {\n\t          attrs.value.properties.push(prop);\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return t.objectExpression(newProps)\n\t};\n\n\tconst acceptValue = ['input','textarea','option','select'];\n\tvar mustUseProp = (tag, type, attr) => {\n\t  return (\n\t    (attr === 'value' && acceptValue.includes(tag)) && type !== 'button' ||\n\t    (attr === 'selected' && tag === 'option') ||\n\t    (attr === 'checked' && tag === 'input') ||\n\t    (attr === 'muted' && tag === 'video')\n\t  )\n\t};\n\n\tvar lib = createCommonjsModule(function (module, exports) {\n\n\texports.__esModule = true;\n\n\texports.default = function () {\n\t  return {\n\t    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n\t      parserOpts.plugins.push(\"jsx\");\n\t    }\n\t  };\n\t};\n\n\tmodule.exports = exports[\"default\"];\n\t});\n\n\tunwrapExports(lib);\n\n\tvar babelPluginTransformVueJsx = function (babel) {\n\t  var t = babel.types;\n\n\t  return {\n\t    inherits: lib,\n\t    visitor: {\n\t      JSXNamespacedName (path) {\n\t        throw path.buildCodeFrameError(\n\t          'Namespaced tags/attributes are not supported. JSX is not XML.\\n' +\n\t          'For attributes like xlink:href, use xlinkHref instead.'\n\t        )\n\t      },\n\t      JSXElement: {\n\t        exit (path, file) {\n\t          // turn tag into createElement call\n\t          var callExpr = buildElementCall(path.get('openingElement'), file);\n\t          // add children array as 3rd arg\n\t          callExpr.arguments.push(t.arrayExpression(path.node.children));\n\t          if (callExpr.arguments.length >= 3) {\n\t            callExpr._prettyCall = true;\n\t          }\n\t          path.replaceWith(t.inherits(callExpr, path.node));\n\t        }\n\t      },\n\t      'Program' (path) {\n\t        path.traverse({\n\t          'ObjectMethod|ClassMethod' (path) {\n\t            const params = path.get('params');\n\t            // do nothing if there is (h) param\n\t            if (params.length && params[0].node.name === 'h') {\n\t              return\n\t            }\n\t            // do nothing if there is no JSX inside\n\t            const jsxChecker = {\n\t              hasJsx: false\n\t            };\n\t            path.traverse({\n\t              JSXElement () {\n\t                this.hasJsx = true;\n\t              }\n\t            }, jsxChecker);\n\t            if (!jsxChecker.hasJsx) {\n\t              return\n\t            }\n\t            const isRender = path.node.key.name === 'render';\n\t            // inject h otherwise\n\t            path.get('body').unshiftContainer('body', t.variableDeclaration('const', [\n\t              t.variableDeclarator(\n\t                t.identifier('h'),\n\t                (\n\t                  isRender\n\t                    ? t.memberExpression(\n\t                      t.identifier('arguments'),\n\t                      t.numericLiteral(0),\n\t                      true\n\t                    )\n\t                    : t.memberExpression(\n\t                      t.thisExpression(),\n\t                      t.identifier('$createElement')\n\t                    )\n\t                )\n\t              )\n\t            ]));\n\t          },\n\t          JSXOpeningElement (path) {\n\t            const tag = path.get('name').node.name;\n\t            const attributes = path.get('attributes');\n\t            const typeAttribute = attributes.find(attributePath => attributePath.node.name && attributePath.node.name.name === 'type');\n\t            const type = typeAttribute && t.isStringLiteral(typeAttribute.node.value) ? typeAttribute.node.value.value : null;\n\n\t            attributes.forEach(attributePath => {\n\t              const attribute = attributePath.get('name');\n\n\t              if (!attribute.node) {\n\t                return\n\t              }\n\n\t              const attr = attribute.node.name;\n\n\t              if (mustUseProp(tag, type, attr) && t.isJSXExpressionContainer(attributePath.node.value)) {\n\t                attribute.replaceWith(t.JSXIdentifier(`domProps-${attr}`));\n\t              }\n\t            });\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }\n\n\t  function buildElementCall (path, file) {\n\t    path.parent.children = t.react.buildChildren(path.parent);\n\t    var tagExpr = convertJSXIdentifier(path.node.name, path.node);\n\t    var args = [];\n\n\t    var tagName;\n\t    if (t.isIdentifier(tagExpr)) {\n\t      tagName = tagExpr.name;\n\t    } else if (t.isLiteral(tagExpr)) {\n\t      tagName = tagExpr.value;\n\t    }\n\n\t    if (t.react.isCompatTag(tagName)) {\n\t      args.push(t.stringLiteral(tagName));\n\t    } else {\n\t      args.push(tagExpr);\n\t    }\n\n\t    var attribs = path.node.attributes;\n\t    if (attribs.length) {\n\t      attribs = buildOpeningElementAttributes(attribs, file);\n\t    } else {\n\t      attribs = t.nullLiteral();\n\t    }\n\t    args.push(attribs);\n\n\t    return t.callExpression(t.identifier('h'), args)\n\t  }\n\n\t  function convertJSXIdentifier (node, parent) {\n\t    if (t.isJSXIdentifier(node)) {\n\t      if (node.name === 'this' && t.isReferenced(node, parent)) {\n\t        return t.thisExpression()\n\t      } else if (utils.keyword.isIdentifierNameES6(node.name)) {\n\t        node.type = 'Identifier';\n\t      } else {\n\t        return t.stringLiteral(node.name)\n\t      }\n\t    } else if (t.isJSXMemberExpression(node)) {\n\t      return t.memberExpression(\n\t        convertJSXIdentifier(node.object, node),\n\t        convertJSXIdentifier(node.property, node)\n\t      )\n\t    }\n\t    return node\n\t  }\n\n\t  /**\n\t   * The logic for this is quite terse. It's because we need to\n\t   * support spread elements. We loop over all attributes,\n\t   * breaking on spreads, we then push a new object containing\n\t   * all prior attributes to an array for later processing.\n\t   */\n\n\t  function buildOpeningElementAttributes (attribs, file) {\n\t    var _props = [];\n\t    var objs = [];\n\n\t    function pushProps () {\n\t      if (!_props.length) return\n\t      objs.push(t.objectExpression(_props));\n\t      _props = [];\n\t    }\n\n\t    while (attribs.length) {\n\t      var prop = attribs.shift();\n\t      if (t.isJSXSpreadAttribute(prop)) {\n\t        pushProps();\n\t        prop.argument._isSpread = true;\n\t        objs.push(prop.argument);\n\t      } else {\n\t        _props.push(convertAttribute(prop));\n\t      }\n\t    }\n\n\t    pushProps();\n\n\t    objs = objs.map(function (o) {\n\t      return o._isSpread ? o : groupProps(o.properties, t)\n\t    });\n\n\t    if (objs.length === 1) {\n\t      // only one object\n\t      attribs = objs[0];\n\t    } else if (objs.length) {\n\t      // add prop merging helper\n\t      var helper = file.addImport('babel-helper-vue-jsx-merge-props', 'default', '_mergeJSXProps');\n\t      // spread it\n\t      attribs = t.callExpression(\n\t        helper,\n\t        [t.arrayExpression(objs)]\n\t      );\n\t    }\n\t    return attribs\n\t  }\n\n\t  function convertAttribute (node) {\n\t    var value = convertAttributeValue(node.value || t.booleanLiteral(true));\n\t    if (t.isStringLiteral(value) && !t.isJSXExpressionContainer(node.value)) {\n\t      value.value = value.value.replace(/\\n\\s+/g, ' ');\n\t    }\n\t    if (t.isValidIdentifier(node.name.name)) {\n\t      node.name.type = 'Identifier';\n\t    } else {\n\t      node.name = t.stringLiteral(node.name.name);\n\t    }\n\t    return t.inherits(t.objectProperty(node.name, value), node)\n\t  }\n\n\t  function convertAttributeValue (node) {\n\t    if (t.isJSXExpressionContainer(node)) {\n\t      return node.expression\n\t    } else {\n\t      return node\n\t    }\n\t  }\n\t};\n\n\tfunction _interopDefault$1 (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\n\tvar syntaxJsx = _interopDefault$1(lib);\n\n\tvar groupEventAttributes = (function (t) {\n\t  return function (obj, attribute) {\n\t    if (t.isJSXSpreadAttribute(attribute)) {\n\t      return obj;\n\t    }\n\n\t    var isNamespaced = t.isJSXNamespacedName(attribute.get('name'));\n\t    var event = (isNamespaced ? attribute.get('name').get('namespace') : attribute.get('name')).get('name').node;\n\t    var modifiers = isNamespaced ? new Set(attribute.get('name').get('name').get('name').node.split('-')) : new Set();\n\n\t    if (event.indexOf('on') !== 0) {\n\t      return obj;\n\t    }\n\n\t    var value = attribute.get('value');\n\n\t    attribute.remove();\n\t    if (!t.isJSXExpressionContainer(value)) {\n\t      return obj;\n\t    }\n\n\t    var expression = value.get('expression').node;\n\n\t    var eventName = event.substr(2);\n\t    if (eventName[0] === '-') {\n\t      eventName = eventName.substr(1);\n\t    }\n\t    eventName = eventName[0].toLowerCase() + eventName.substr(1);\n\t    if (modifiers.has('capture')) {\n\t      eventName = '!' + eventName;\n\t    }\n\t    if (modifiers.has('once')) {\n\t      eventName = '~' + eventName;\n\t    }\n\n\t    if (!obj[eventName]) {\n\t      obj[eventName] = [];\n\t    }\n\n\t    obj[eventName].push({ modifiers, expression, attribute });\n\n\t    return obj;\n\t  };\n\t});\n\n\tvar aliases = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40,\n\t  delete: [8, 46]\n\t};\n\n\tvar keyModifiers = ['ctrl', 'shift', 'alt', 'meta'];\n\n\tvar keyCodeRE = /^k(\\d{1,})$/;\n\n\tvar generateBindingBody = (function (t, _ref) {\n\t  var modifiers = _ref.modifiers,\n\t      expression = _ref.expression;\n\n\t  var callStatement = t.expressionStatement(t.callExpression(expression, [t.identifier('$event')]));\n\t  var result = [];\n\t  var conditions = [];\n\t  var keyConditions = [t.unaryExpression('!', t.binaryExpression('in', t.stringLiteral('button'), t.identifier('$event')))];\n\n\t  modifiers.forEach(function (modifier) {\n\t    if (modifier === 'stop') {\n\t      result.push(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('$event'), t.identifier('stopPropagation')), [])));\n\t    } else if (modifier === 'prevent') {\n\t      result.push(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('$event'), t.identifier('preventDefault')), [])));\n\t    } else if (modifier === 'self') {\n\t      conditions.push(t.binaryExpression('!==', t.memberExpression(t.identifier('$event'), t.identifier('target')), t.memberExpression(t.identifier('$event'), t.identifier('currentTarget'))));\n\t    } else if (keyModifiers.includes(modifier)) {\n\t      conditions.push(t.unaryExpression('!', t.memberExpression(t.identifier('$event'), t.identifier(`${modifier}Key`))));\n\t    } else if (modifier === 'bare') {\n\t      conditions.push(keyModifiers.filter(function (keyModifier) {\n\t        return !modifiers.has(keyModifier);\n\t      }).map(function (keyModifier) {\n\t        return t.memberExpression(t.identifier('$event'), t.identifier(`${keyModifier}Key`));\n\t      }).reduce(function (leftCondition, rightCondition) {\n\t        return t.logicalExpression('||', leftCondition, rightCondition);\n\t      }));\n\t    } else if (aliases[modifier]) {\n\t      keyConditions.push(t.callExpression(t.memberExpression(t.thisExpression(), t.identifier('_k')), [t.memberExpression(t.identifier('$event'), t.identifier('keyCode')), t.stringLiteral(modifier), Array.isArray(aliases[modifier]) ? t.arrayExpression(aliases[modifier].map(function (el) {\n\t        return t.numericLiteral(el);\n\t      })) : t.numericLiteral(aliases[modifier])]));\n\t    } else if (modifier.match(keyCodeRE)) {\n\t      var keyCode = +modifier.match(keyCodeRE)[1];\n\t      keyConditions.push(t.binaryExpression('!==', t.memberExpression(t.identifier('$event'), t.identifier('keyCode')), t.numericLiteral(keyCode)));\n\t    }\n\t  });\n\n\t  if (keyConditions.length > 1) {\n\t    conditions.push(keyConditions.reduce(function (leftCondition, rightCondition) {\n\t      return t.logicalExpression('&&', leftCondition, rightCondition);\n\t    }));\n\t  }\n\n\t  if (conditions.length > 0) {\n\t    result.push(t.ifStatement(conditions.reduce(function (leftCondition, rightCondition) {\n\t      return t.logicalExpression('||', leftCondition, rightCondition);\n\t    }), t.returnStatement(t.nullLiteral())));\n\t  }\n\n\t  result.push(callStatement);\n\t  return result;\n\t});\n\n\tvar generateBindingsList = (function (t, bindings) {\n\t  return bindings.map(function (binding) {\n\t    return t.arrowFunctionExpression([t.identifier('$event')], t.blockStatement(generateBindingBody(t, binding)));\n\t  });\n\t});\n\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n\tvar generateSpreadEvent = (function (t) {\n\t  return function (_ref) {\n\t    var _ref2 = _slicedToArray(_ref, 2),\n\t        event = _ref2[0],\n\t        bindings = _ref2[1];\n\n\t    var callbacks = generateBindingsList(t, bindings);\n\t    return t.objectProperty(t.stringLiteral(event), callbacks.length === 1 ? callbacks[0] : t.arrayExpression(callbacks));\n\t  };\n\t});\n\n\tvar index$1 = (function (_ref) {\n\t  var t = _ref.types;\n\t  return {\n\t    inherits: syntaxJsx,\n\t    visitor: {\n\t      Program(path) {\n\t        path.traverse({\n\t          JSXOpeningElement(path) {\n\t            var attributes = path.get('attributes');\n\t            var events = Object.entries(attributes.reduce(groupEventAttributes(t), {}));\n\t            if (events.length > 0) {\n\t              path.pushContainer('attributes', t.jSXSpreadAttribute(t.objectExpression([t.objectProperty(t.identifier('on'), t.objectExpression(events.map(generateSpreadEvent(t))))])));\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }\n\t  };\n\t});\n\n\tvar bundle = index$1;\n\n\tvar htmlTags = [\n\t\t\"a\",\n\t\t\"abbr\",\n\t\t\"address\",\n\t\t\"area\",\n\t\t\"article\",\n\t\t\"aside\",\n\t\t\"audio\",\n\t\t\"b\",\n\t\t\"base\",\n\t\t\"bdi\",\n\t\t\"bdo\",\n\t\t\"blockquote\",\n\t\t\"body\",\n\t\t\"br\",\n\t\t\"button\",\n\t\t\"canvas\",\n\t\t\"caption\",\n\t\t\"cite\",\n\t\t\"code\",\n\t\t\"col\",\n\t\t\"colgroup\",\n\t\t\"data\",\n\t\t\"datalist\",\n\t\t\"dd\",\n\t\t\"del\",\n\t\t\"details\",\n\t\t\"dfn\",\n\t\t\"dialog\",\n\t\t\"div\",\n\t\t\"dl\",\n\t\t\"dt\",\n\t\t\"em\",\n\t\t\"embed\",\n\t\t\"fieldset\",\n\t\t\"figcaption\",\n\t\t\"figure\",\n\t\t\"footer\",\n\t\t\"form\",\n\t\t\"h1\",\n\t\t\"h2\",\n\t\t\"h3\",\n\t\t\"h4\",\n\t\t\"h5\",\n\t\t\"h6\",\n\t\t\"head\",\n\t\t\"header\",\n\t\t\"hgroup\",\n\t\t\"hr\",\n\t\t\"html\",\n\t\t\"i\",\n\t\t\"iframe\",\n\t\t\"img\",\n\t\t\"input\",\n\t\t\"ins\",\n\t\t\"kbd\",\n\t\t\"keygen\",\n\t\t\"label\",\n\t\t\"legend\",\n\t\t\"li\",\n\t\t\"link\",\n\t\t\"main\",\n\t\t\"map\",\n\t\t\"mark\",\n\t\t\"math\",\n\t\t\"menu\",\n\t\t\"menuitem\",\n\t\t\"meta\",\n\t\t\"meter\",\n\t\t\"nav\",\n\t\t\"noscript\",\n\t\t\"object\",\n\t\t\"ol\",\n\t\t\"optgroup\",\n\t\t\"option\",\n\t\t\"output\",\n\t\t\"p\",\n\t\t\"param\",\n\t\t\"picture\",\n\t\t\"pre\",\n\t\t\"progress\",\n\t\t\"q\",\n\t\t\"rb\",\n\t\t\"rp\",\n\t\t\"rt\",\n\t\t\"rtc\",\n\t\t\"ruby\",\n\t\t\"s\",\n\t\t\"samp\",\n\t\t\"script\",\n\t\t\"section\",\n\t\t\"select\",\n\t\t\"slot\",\n\t\t\"small\",\n\t\t\"source\",\n\t\t\"span\",\n\t\t\"strong\",\n\t\t\"style\",\n\t\t\"sub\",\n\t\t\"summary\",\n\t\t\"sup\",\n\t\t\"svg\",\n\t\t\"table\",\n\t\t\"tbody\",\n\t\t\"td\",\n\t\t\"template\",\n\t\t\"textarea\",\n\t\t\"tfoot\",\n\t\t\"th\",\n\t\t\"thead\",\n\t\t\"time\",\n\t\t\"title\",\n\t\t\"tr\",\n\t\t\"track\",\n\t\t\"u\",\n\t\t\"ul\",\n\t\t\"var\",\n\t\t\"video\",\n\t\t\"wbr\"\n\t]\n\t;\n\n\tvar htmlTags$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: htmlTags\n\t});\n\n\tvar require$$0 = ( htmlTags$1 && htmlTags ) || htmlTags$1;\n\n\tvar htmlTags$2 = require$$0;\n\n\tvar svgTags = [\n\t\t\"a\",\n\t\t\"altGlyph\",\n\t\t\"altGlyphDef\",\n\t\t\"altGlyphItem\",\n\t\t\"animate\",\n\t\t\"animateColor\",\n\t\t\"animateMotion\",\n\t\t\"animateTransform\",\n\t\t\"circle\",\n\t\t\"clipPath\",\n\t\t\"color-profile\",\n\t\t\"cursor\",\n\t\t\"defs\",\n\t\t\"desc\",\n\t\t\"ellipse\",\n\t\t\"feBlend\",\n\t\t\"feColorMatrix\",\n\t\t\"feComponentTransfer\",\n\t\t\"feComposite\",\n\t\t\"feConvolveMatrix\",\n\t\t\"feDiffuseLighting\",\n\t\t\"feDisplacementMap\",\n\t\t\"feDistantLight\",\n\t\t\"feFlood\",\n\t\t\"feFuncA\",\n\t\t\"feFuncB\",\n\t\t\"feFuncG\",\n\t\t\"feFuncR\",\n\t\t\"feGaussianBlur\",\n\t\t\"feImage\",\n\t\t\"feMerge\",\n\t\t\"feMergeNode\",\n\t\t\"feMorphology\",\n\t\t\"feOffset\",\n\t\t\"fePointLight\",\n\t\t\"feSpecularLighting\",\n\t\t\"feSpotLight\",\n\t\t\"feTile\",\n\t\t\"feTurbulence\",\n\t\t\"filter\",\n\t\t\"font\",\n\t\t\"font-face\",\n\t\t\"font-face-format\",\n\t\t\"font-face-name\",\n\t\t\"font-face-src\",\n\t\t\"font-face-uri\",\n\t\t\"foreignObject\",\n\t\t\"g\",\n\t\t\"glyph\",\n\t\t\"glyphRef\",\n\t\t\"hkern\",\n\t\t\"image\",\n\t\t\"line\",\n\t\t\"linearGradient\",\n\t\t\"marker\",\n\t\t\"mask\",\n\t\t\"metadata\",\n\t\t\"missing-glyph\",\n\t\t\"mpath\",\n\t\t\"path\",\n\t\t\"pattern\",\n\t\t\"polygon\",\n\t\t\"polyline\",\n\t\t\"radialGradient\",\n\t\t\"rect\",\n\t\t\"script\",\n\t\t\"set\",\n\t\t\"stop\",\n\t\t\"style\",\n\t\t\"svg\",\n\t\t\"switch\",\n\t\t\"symbol\",\n\t\t\"text\",\n\t\t\"textPath\",\n\t\t\"title\",\n\t\t\"tref\",\n\t\t\"tspan\",\n\t\t\"use\",\n\t\t\"view\",\n\t\t\"vkern\"\n\t];\n\n\tvar svgTags$1 = /*#__PURE__*/Object.freeze({\n\t\tdefault: svgTags\n\t});\n\n\tvar require$$0$1 = ( svgTags$1 && svgTags ) || svgTags$1;\n\n\tvar lib$1 = require$$0$1;\n\n\tvar allowedModifiers = ['trim', 'number', 'lazy'];\n\tvar RANGE_TOKEN = '__r';\n\tvar CHECKBOX_RADIO_TOKEN = '__c';\n\n\n\n\n\n\tvar isReservedTag = function isReservedTag(tag) {\n\t  return ~htmlTags$2.indexOf(tag) || ~lib$1.indexOf(tag)\n\t};\n\n\tvar getExpression = function getExpression(t, path) {\n\t  return t.isStringLiteral(path.node.value) ? path.node.value : path.node.value.expression\n\t};\n\n\tvar genValue = function genValue(t, model) {\n\t  return t.jSXAttribute(t.jSXIdentifier('domPropsValue'), t.jSXExpressionContainer(model))\n\t};\n\n\tvar genAssignmentCode = function genAssignmentCode(t, model, assignment) {\n\t  if (model.computed) {\n\t    var object = model.object,\n\t      property = model.property;\n\n\t    return t.ExpressionStatement(\n\t      t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('$set')), [object, property, assignment])\n\t    )\n\t  } else {\n\t    return t.ExpressionStatement(t.AssignmentExpression('=', model, assignment))\n\t  }\n\t};\n\n\tvar genListener = function genListener(t, event, body) {\n\t  return t.jSXAttribute(\n\t    t.jSXIdentifier('on' + event),\n\t    t.jSXExpressionContainer(t.ArrowFunctionExpression([t.Identifier('$event')], t.BlockStatement(body)))\n\t  )\n\t};\n\n\tvar genSelectModel = function genSelectModel(t, modelAttribute, model, modifier) {\n\t  if (modifier && modifier !== 'number') {\n\t    throw modelAttribute.get('name').get('name').buildCodeFrameError('you can only use number modifier with <select/ >')\n\t  }\n\n\t  var number = modifier === 'number';\n\n\t  var valueGetter = t.ConditionalExpression(\n\t    t.BinaryExpression('in', t.StringLiteral('_value'), t.Identifier('o')),\n\t    t.MemberExpression(t.Identifier('o'), t.Identifier('_value')),\n\t    t.MemberExpression(t.Identifier('o'), t.Identifier('value'))\n\t  );\n\n\t  var selectedVal = t.CallExpression(\n\t    t.MemberExpression(\n\t      t.CallExpression(\n\t        t.MemberExpression(\n\t          t.MemberExpression(\n\t            t.MemberExpression(t.Identifier('Array'), t.Identifier('prototype')),\n\t            t.Identifier('filter')\n\t          ),\n\t          t.Identifier('call')\n\t        ),\n\t        [\n\t          t.MemberExpression(\n\t            t.MemberExpression(t.Identifier('$event'), t.Identifier('target')),\n\t            t.Identifier('options')\n\t          ),\n\t          t.ArrowFunctionExpression(\n\t            [t.Identifier('o')],\n\t            t.MemberExpression(t.Identifier('o'), t.Identifier('selected'))\n\t          )\n\t        ]\n\t      ),\n\t      t.Identifier('map')\n\t    ),\n\t    [\n\t      t.ArrowFunctionExpression(\n\t        [t.Identifier('o')],\n\t        number\n\t          ? t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_n')), [valueGetter])\n\t          : valueGetter\n\t      )\n\t    ]\n\t  );\n\n\t  var assignment = t.ConditionalExpression(\n\t    t.MemberExpression(t.MemberExpression(t.Identifier('$event'), t.Identifier('target')), t.Identifier('multiple')),\n\t    t.Identifier('$$selectedVal'),\n\t    t.MemberExpression(t.Identifier('$$selectedVal'), t.NumericLiteral(0), true)\n\t  );\n\n\t  var code = t.VariableDeclaration('const', [t.VariableDeclarator(t.Identifier('$$selectedVal'), selectedVal)]);\n\n\t  return [genValue(t, model), genListener(t, 'Change', [code, genAssignmentCode(t, model, assignment)])]\n\t};\n\n\tvar genCheckboxModel = function genCheckboxModel(t, modelAttribute, model, modifier, path) {\n\t  if (modifier && modifier !== 'number') {\n\t    throw modelAttribute\n\t      .get('name')\n\t      .get('name')\n\t      .buildCodeFrameError('you can only use number modifier with input[type=\"checkbox\"]')\n\t  }\n\n\t  var value = t.NullLiteral();\n\t  var trueValue = t.BooleanLiteral(true);\n\t  var falseValue = t.BooleanLiteral(false);\n\n\t  path.get('attributes').forEach(function(path) {\n\t    if (!path.node.name) {\n\t      return\n\t    }\n\n\t    if (path.node.name.name === 'value') {\n\t      value = getExpression(t, path);\n\t      path.remove();\n\t    } else if (path.node.name.name === 'true-value') {\n\t      trueValue = getExpression(t, path);\n\t      path.remove();\n\t    } else if (path.node.name.name === 'false-value') {\n\t      falseValue = getExpression(t, path);\n\t      path.remove();\n\t    }\n\t  });\n\n\t  var checkedProp = t.JSXAttribute(\n\t    t.JSXIdentifier('checked'),\n\t    t.JSXExpressionContainer(\n\t      t.ConditionalExpression(\n\t        t.CallExpression(t.MemberExpression(t.Identifier('Array'), t.Identifier('isArray')), [model]),\n\t        t.BinaryExpression(\n\t          '>',\n\t          t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_i')), [model, value]),\n\t          t.UnaryExpression('-', t.NumericLiteral(1))\n\t        ),\n\t        t.isBooleanLiteral(trueValue) && trueValue.value === true\n\t          ? model\n\t          : t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_q')), [model, trueValue])\n\t      )\n\t    )\n\t  );\n\n\t  var handlerProp = t.JSXAttribute(\n\t    t.JSXIdentifier('on' + CHECKBOX_RADIO_TOKEN),\n\t    t.JSXExpressionContainer(\n\t      t.ArrowFunctionExpression(\n\t        [t.Identifier('$event')],\n\t        t.BlockStatement([\n\t          t.VariableDeclaration('const', [\n\t            t.VariableDeclarator(t.Identifier('$$a'), model),\n\t            t.VariableDeclarator(\n\t              t.Identifier('$$el'),\n\t              t.MemberExpression(t.Identifier('$event'), t.Identifier('target'))\n\t            ),\n\t            t.VariableDeclarator(\n\t              t.Identifier('$$c'),\n\t              t.ConditionalExpression(\n\t                t.MemberExpression(t.Identifier('$$el'), t.Identifier('checked')),\n\t                trueValue,\n\t                falseValue\n\t              )\n\t            )\n\t          ]),\n\t          t.IfStatement(\n\t            t.CallExpression(t.MemberExpression(t.Identifier('Array'), t.Identifier('isArray')), [t.Identifier('$$a')]),\n\t            t.BlockStatement([\n\t              t.VariableDeclaration('const', [\n\t                t.VariableDeclarator(\n\t                  t.Identifier('$$v'),\n\t                  modifier === 'number'\n\t                    ? t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_n')), [value])\n\t                    : value\n\t                ),\n\t                t.VariableDeclarator(\n\t                  t.Identifier('$$i'),\n\t                  t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_i')), [\n\t                    t.Identifier('$$a'),\n\t                    t.Identifier('$$v')\n\t                  ])\n\t                )\n\t              ]),\n\t              t.IfStatement(\n\t                t.MemberExpression(t.Identifier('$$el'), t.Identifier('checked')),\n\t                t.BlockStatement([\n\t                  t.ExpressionStatement(\n\t                    t.LogicalExpression(\n\t                      '&&',\n\t                      t.BinaryExpression('<', t.Identifier('$$i'), t.NumericLiteral(0)),\n\t                      t.AssignmentExpression(\n\t                        '=',\n\t                        model,\n\t                        t.CallExpression(t.MemberExpression(t.Identifier('$$a'), t.Identifier('concat')), [\n\t                          t.Identifier('$$v')\n\t                        ])\n\t                      )\n\t                    )\n\t                  )\n\t                ]),\n\t                t.BlockStatement([\n\t                  t.ExpressionStatement(\n\t                    t.LogicalExpression(\n\t                      '&&',\n\t                      t.BinaryExpression('>', t.Identifier('$$i'), t.UnaryExpression('-', t.NumericLiteral(1))),\n\t                      t.AssignmentExpression(\n\t                        '=',\n\t                        model,\n\t                        t.CallExpression(\n\t                          t.MemberExpression(\n\t                            t.CallExpression(t.MemberExpression(t.Identifier('$$a'), t.Identifier('slice')), [\n\t                              t.NumericLiteral(0),\n\t                              t.Identifier('$$i')\n\t                            ]),\n\t                            t.Identifier('concat')\n\t                          ),\n\t                          [\n\t                            t.CallExpression(t.MemberExpression(t.Identifier('$$a'), t.Identifier('slice')), [\n\t                              t.BinaryExpression('+', t.Identifier('$$i'), t.NumericLiteral(1))\n\t                            ])\n\t                          ]\n\t                        )\n\t                      )\n\t                    )\n\t                  )\n\t                ])\n\t              )\n\t            ]),\n\t            t.BlockStatement([genAssignmentCode(t, model, t.Identifier('$$c'))])\n\t          )\n\t        ])\n\t      )\n\t    )\n\t  );\n\n\t  return [checkedProp, handlerProp]\n\t};\n\n\tvar genRadioModel = function genRadioModel(t, modelAttribute, model, modifier, path) {\n\t  if (modifier && modifier !== 'number') {\n\t    throw modelAttribute\n\t      .get('name')\n\t      .get('name')\n\t      .buildCodeFrameError('you can only use number modifier with input[type=\"radio\"]')\n\t  }\n\n\t  var value = t.BooleanLiteral(true);\n\n\t  path.get('attributes').forEach(function(path) {\n\t    if (!path.node.name) {\n\t      return\n\t    }\n\n\t    if (path.node.name.name === 'value') {\n\t      value = getExpression(t, path);\n\t      path.remove();\n\t    }\n\t  });\n\n\t  var checkedProp = t.JSXAttribute(\n\t    t.JSXIdentifier('checked'),\n\t    t.JSXExpressionContainer(\n\t      t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_q')), [model, value])\n\t    )\n\t  );\n\n\t  var handlerProp = t.JSXAttribute(\n\t    t.JSXIdentifier('on' + CHECKBOX_RADIO_TOKEN),\n\t    t.JSXExpressionContainer(\n\t      t.ArrowFunctionExpression(\n\t        [t.Identifier('$event')],\n\t        t.BlockStatement([\n\t          genAssignmentCode(\n\t            t,\n\t            model,\n\t            modifier === 'number'\n\t              ? t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_n')), [value])\n\t              : value\n\t          )\n\t        ])\n\t      )\n\t    )\n\t  );\n\n\t  return [checkedProp, handlerProp]\n\t};\n\n\tvar genDefaultModel = function genDefaultModel(t, modelAttribute, model, modifier, path, type) {\n\t  var needCompositionGuard = modifier !== 'lazy' && type !== 'range';\n\n\t  var event = modifier === 'lazy' ? 'Change' : type === 'range' ? RANGE_TOKEN : 'Input';\n\n\t  var valueExpression = t.MemberExpression(\n\t    t.MemberExpression(t.Identifier('$event'), t.Identifier('target')),\n\t    t.Identifier('value')\n\t  );\n\n\t  if (modifier === 'trim') {\n\t    valueExpression = t.CallExpression(t.MemberExpression(valueExpression, t.Identifier('trim')), []);\n\t  } else if (modifier === 'number') {\n\t    valueExpression = t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_n')), [valueExpression]);\n\t  }\n\n\t  var code = genAssignmentCode(t, model, valueExpression);\n\n\t  if (needCompositionGuard) {\n\t    code = t.BlockStatement([\n\t      t.IfStatement(\n\t        t.MemberExpression(\n\t          t.MemberExpression(t.Identifier('$event'), t.Identifier('target')),\n\t          t.Identifier('composing')\n\t        ),\n\t        t.ReturnStatement(null)\n\t      ),\n\t      code\n\t    ]);\n\t  } else {\n\t    code = t.BlockStatement([code]);\n\t  }\n\n\t  var valueProp = t.JSXAttribute(t.jSXIdentifier('domPropsValue'), t.JSXExpressionContainer(model));\n\n\t  var handlerProp = t.JSXAttribute(\n\t    t.JSXIdentifier('on' + event),\n\t    t.JSXExpressionContainer(t.ArrowFunctionExpression([t.Identifier('$event')], code))\n\t  );\n\n\t  var props = [valueProp, handlerProp];\n\n\t  if (modifier === 'trim' || modifier === 'number') {\n\t    props.push(\n\t      t.JSXAttribute(\n\t        t.JSXIdentifier('onBlur'),\n\t        t.JSXExpressionContainer(\n\t          t.ArrowFunctionExpression(\n\t            [],\n\t            t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('$forceUpdate')), [])\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\n\t  return props\n\t};\n\n\tvar genComponentModel = function genComponentModel(t, modelAttribute, model, modifier, path, type) {\n\t  var baseValueExpression = t.Identifier('$$v');\n\t  var valueExpression = baseValueExpression;\n\n\t  if (modifier === 'trim') {\n\t    valueExpression = t.CallExpression(t.MemberExpression(valueExpression, t.Identifier('trim')), []);\n\t  } else if (modifier === 'number') {\n\t    valueExpression = t.CallExpression(t.MemberExpression(t.ThisExpression(), t.Identifier('_n')), [valueExpression]);\n\t  }\n\n\t  var assignment = genAssignmentCode(t, model, valueExpression);\n\n\t  var valueProp = t.JSXAttribute(t.jSXIdentifier('domPropsValue'), t.JSXExpressionContainer(model));\n\n\t  var handlerProp = t.JSXAttribute(\n\t    t.JSXIdentifier('onChange'),\n\t    t.JSXExpressionContainer(t.ArrowFunctionExpression([baseValueExpression], t.BlockStatement([assignment])))\n\t  );\n\n\t  return [valueProp, handlerProp]\n\t};\n\n\tvar babelPluginJsxVModel = function(babel) {\n\t  var t = babel.types;\n\n\t  return {\n\t    inherits: lib,\n\t    visitor: {\n\t      JSXOpeningElement: function JSXOpeningElement(path) {\n\t        var model = null;\n\t        var modifier = null;\n\t        var modelAttribute = null;\n\t        var type = null;\n\t        var typePath = null;\n\n\t        path.get('attributes').forEach(function(path) {\n\t          if (!path.node.name) {\n\t            return\n\t          }\n\n\t          if (path.node.name.name === 'type') {\n\t            type = path.node.value.value;\n\t            typePath = path.get('value');\n\t          }\n\t          /* istanbul ignore else */\n\t          if (t.isJSXIdentifier(path.node.name)) {\n\t            if (path.node.name.name !== 'v-model') {\n\t              return\n\t            }\n\t          } else if (t.isJSXNamespacedName(path.node.name)) {\n\t            if (path.node.name.namespace.name !== 'v-model') {\n\t              return\n\t            }\n\n\t            if (!~allowedModifiers.indexOf(path.node.name.name.name)) {\n\t              throw path\n\t                .get('name')\n\t                .get('name')\n\t                .buildCodeFrameError('v-model does not support \"' + path.node.name.name.name + '\" modifier')\n\t            }\n\n\t            modifier = path.node.name.name.name;\n\t          } else {\n\t            return\n\t          }\n\n\t          modelAttribute = path;\n\n\t          if (model) {\n\t            throw path.buildCodeFrameError('you can not have multiple v-model directives on a single element')\n\t          }\n\n\t          if (!t.isJSXExpressionContainer(path.node.value)) {\n\t            throw path.get('value').buildCodeFrameError('you should use JSX Expression with v-model')\n\t          }\n\n\t          if (!t.isMemberExpression(path.node.value.expression)) {\n\t            throw path\n\t              .get('value')\n\t              .get('expression')\n\t              .buildCodeFrameError('you should use MemberExpression with v-model')\n\t          }\n\n\t          model = path.node.value.expression;\n\t        });\n\n\t        if (!model) {\n\t          return\n\t        }\n\n\t        var tag = path.node.name.name;\n\n\t        if (tag === 'input' && typePath && t.isJSXExpressionContainer(typePath.node)) {\n\t          throw typePath.buildCodeFrameError('you can not use dynamic type with v-model')\n\t        }\n\t        if (tag === 'input' && type === 'file') {\n\t          throw typePath.buildCodeFrameError('you can not use \"file\" type with v-model')\n\t        }\n\n\t        var replacement = null;\n\n\t        if (tag === 'select') {\n\t          replacement = genSelectModel(t, modelAttribute, model, modifier);\n\t        } else if (tag === 'input' && type === 'checkbox') {\n\t          replacement = genCheckboxModel(t, modelAttribute, model, modifier, path);\n\t        } else if (tag === 'input' && type === 'radio') {\n\t          replacement = genRadioModel(t, modelAttribute, model, modifier, path);\n\t        } else if (tag === 'input' || tag === 'textarea') {\n\t          replacement = genDefaultModel(t, modelAttribute, model, modifier, path, type);\n\t        } else if (!isReservedTag(tag)) {\n\t          replacement = genComponentModel(t, modelAttribute, model, modifier, path);\n\t        } else {\n\t          throw path.buildCodeFrameError('you can not use \"' + tag + '\" with v-model')\n\t        }\n\n\t        modelAttribute.replaceWithMultiple([\n\t          ...replacement,\n\t          t.JSXSpreadAttribute(\n\t            t.ObjectExpression([\n\t              t.ObjectProperty(\n\t                t.Identifier('directives'),\n\t                t.ArrayExpression([\n\t                  t.ObjectExpression([\n\t                    t.ObjectProperty(t.Identifier('name'), t.StringLiteral('model')),\n\t                    t.ObjectProperty(t.Identifier('value'), model)\n\t                  ])\n\t                ])\n\t              )\n\t            ])\n\t          )\n\t        ]);\n\t      }\n\t    }\n\t  }\n\t};\n\n\tvar index$2 = (function (_) {\n\t  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t      _ref$eventModifiers = _ref.eventModifiers,\n\t      eventModifiers = _ref$eventModifiers === void 0 ? true : _ref$eventModifiers,\n\t      _ref$vModel = _ref.vModel,\n\t      vModel = _ref$vModel === void 0 ? true : _ref$vModel;\n\n\t  return {\n\t    plugins: [eventModifiers && bundle, vModel && babelPluginJsxVModel, babelPluginTransformVueJsx].filter(Boolean)\n\t  };\n\t});\n\n\treturn index$2;\n\n})));\n\n\n//# sourceURL=webpack://JsCodeRunner/./node_modules/babel-preset-vue/dist/babel-preset-vue.js?")}}]);