(window.webpackJsonpJsCodeRunner=window.webpackJsonpJsCodeRunner||[]).push([[4],{"./node_modules/raw-loader/dist/cjs.js!./src/transformer/vueJsxMergeProps.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/transformer/vueJsxMergeProps.js ***!
  \***********************************************************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"window._mergeJSXProps = function (objs) {\\n    var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/;\\n\\n    function mergeFn (a, b) {\\n        return function () {\\n            a.apply(this, arguments);\\n            b.apply(this, arguments)\\n        }\\n    }\\n\\n    return objs.reduce(function (a, b) {\\n        var aa, bb, key, nestedKey, temp;\\n        for (key in b) {\\n            aa = a[key];\\n            bb = b[key];\\n            if (aa && nestRE.test(key)) {\\n                // normalize class\\n                if (key === 'class') {\\n                    if (typeof aa === 'string') {\\n                        temp = aa;\\n                        a[key] = aa = {};\\n                        aa[temp] = true;\\n                    }\\n                    if (typeof bb === 'string') {\\n                        temp = bb;\\n                        b[key] = bb = {};\\n                        bb[temp] = true;\\n                    }\\n                }\\n                if (key === 'on' || key === 'nativeOn' || key === 'hook') {\\n                    // merge functions\\n                    for (nestedKey in bb) {\\n                        aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey]);\\n                    }\\n                } else if (Array.isArray(aa)) {\\n                    a[key] = aa.concat(bb);\\n                } else if (Array.isArray(bb)) {\\n                    a[key] = [aa].concat(bb);\\n                } else {\\n                    for (nestedKey in bb) {\\n                        aa[nestedKey] = bb[nestedKey];\\n                    }\\n                }\\n            } else {\\n                a[key] = b[key];\\n            }\\n        }\\n        return a;\\n    }, {})\\n};\");\n\n//# sourceURL=webpack://JsCodeRunner/./src/transformer/vueJsxMergeProps.js?./node_modules/raw-loader/dist/cjs.js")}}]);